{"version":3,"sources":["url.service.js"],"names":["angular","module","concat","part","String","i","arguments","length","parts","push","encodeUriComponent","replace","str","pctEncodeSpaces","encodeUriSegment"],"mappings":"YAKAA,4BAMEC,OAAO,cAAA,YAKLC,OAAQ,iBACN,2BAMEC,EAAOC,GACHD,EAAAA,EAASE,EAAIC,UAAAC,OAAAF,IAAA,KACfG,EAAMC,UAAKN,0DASjBO,OAAAA,EAAAA,KAAoB,KAAAC,QAAA,iBAASC,OAAKC,QAAAA,QAAiB,uCAYnDC,OAAAA,mBAAkBF,GAAAD,QAAA,OAAc,KAAAA,QAAA,QAAA,KAAAA,QAAA,OAAA,KAAAA,QAAA,QAAA,KAAAA,QAAA,OAAAE,EAAA,MAAA","file":"angular-url.min.js","sourcesContent":["(function(window, angular, undefined) {'use strict';\n\n/**\n * Module definition and dependencies\n */\nangular.module('Url.Service', [])\n\n/**\n * Factory definition\n */\n.factory('$url', function() {\n  return {\n\n    /**\n     * Url concatenation helper\n     */\n    concat: function() {\n      var parts = [];\n      for (var i = 0; i < arguments.length; i++) {\n        var part = arguments[i];\n        if (part === null || part === undefined || part === true || part === false) {\n          continue;\n        }\n        part = String(part);\n        if (part !== '') {\n          parts.push(part);\n        }\n      }\n      return parts.join('/').replace(/([^:])(\\/\\/+)/g, '$1/').replace(/^\\/\\//, '/');\n    },\n\n    /**\n     * Encode URI component\n     */\n    encodeUriComponent: function(str, pctEncodeSpaces) {\n      return encodeURIComponent(str)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\n    },\n\n    /**\n     * Encode URI segments\n     */\n    encodeUriSegment: function(str) {\n      return this.encodeUriComponent(str, true).\n        replace(/%26/gi, '&').\n        replace(/%3D/gi, '=').\n        replace(/%2B/gi, '+');\n    }\n  };\n});\n\n})(window, window.angular);\n"]}