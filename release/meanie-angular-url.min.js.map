{"version":3,"sources":["meanie-angular-url.min.js","url.service.js"],"names":["window","angular","undefined","module","factory","concat","parts","i","arguments","length","part","String","push","join","replace","encodeUriComponent","str","pctEncodeSpaces","encodeURIComponent","encodeUriSegment","this"],"mappings":"CAMA,SAAWA,EAAQC,EAASC,GCD5B,YDQED,GCFAE,OAAO,kBDONC,QCFC,OAAQ,WDGR,OAKEC,OAAQ,WAEN,ICFA,GADAC,MACIC,EAAA,EAASA,EAAIC,UAAAC,OAAAF,IAAA,CDGf,GCFAG,GAAMF,UAAKD,EDGE,QAATG,GAAiBA,IAASR,GAAaQ,KAAS,GAAQA,KAAS,IAGrEA,EAAOC,OAAOD,GACD,KAATA,GACFJ,EAAMM,KAAKF,ICCnB,MAAAJ,GAAAO,KAAoB,KAAAC,QAAA,iBAAS,OAAKA,QAAA,QAAiB,MDQjDC,mBAAoB,SAA4BC,EAAKC,GCIvD,MAAAC,oBAAkBF,GAAAF,QAAA,OAAc,KAAAA,QAAA,QAAA,KAAAA,QAAA,OAAA,KAAAA,QAAA,QAAA,KAAAA,QAAA,OAAAG,EAAA,MAAA,MDG9BE,iBAAkB,SAA0BH,GAC1C,MAAOI,MAAKL,mBAAmBC,GAAK,GAAMF,QAAQ,QAAS,KAAKA,QAAQ,QAAS,KAAKA,QAAQ,QAAS,UAI5Gd,OAAQA,OAAOC","file":"meanie-angular-url.min.js","sourcesContent":["/**\n * meanie-angular-url * https://github.com/meanie/angular-url\n *\n * Copyright (c) 2016 Adam Reis <adam@reis.nz>\n * License: MIT\n */\n(function (window, angular, undefined) {\n  'use strict';\n\n  /**\n   * Module definition and dependencies\n   */\n\n  angular.module('Url.Service', [])\n\n  /**\n   * Factory definition\n   */\n  .factory('$url', function () {\n    return {\n\n      /**\n       * Url concatenation helper\n       */\n      concat: function concat() {\n        var parts = [];\n        for (var i = 0; i < arguments.length; i++) {\n          var part = arguments[i];\n          if (part === null || part === undefined || part === true || part === false) {\n            continue;\n          }\n          part = String(part);\n          if (part !== '') {\n            parts.push(part);\n          }\n        }\n        return parts.join('/').replace(/([^:])(\\/\\/+)/g, '$1/').replace(/^\\/\\//, '/');\n      },\n\n      /**\n       * Encode URI component\n       */\n      encodeUriComponent: function encodeUriComponent(str, pctEncodeSpaces) {\n        return encodeURIComponent(str).replace(/%40/g, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, pctEncodeSpaces ? '%20' : '+');\n      },\n\n      /**\n       * Encode URI segments\n       */\n      encodeUriSegment: function encodeUriSegment(str) {\n        return this.encodeUriComponent(str, true).replace(/%26/gi, '&').replace(/%3D/gi, '=').replace(/%2B/gi, '+');\n      }\n    };\n  });\n})(window, window.angular);","(function(window, angular, undefined) {'use strict';\n\n/**\n * Module definition and dependencies\n */\nangular.module('Url.Service', [])\n\n/**\n * Factory definition\n */\n.factory('$url', function() {\n  return {\n\n    /**\n     * Url concatenation helper\n     */\n    concat: function() {\n      var parts = [];\n      for (var i = 0; i < arguments.length; i++) {\n        var part = arguments[i];\n        if (part === null || part === undefined || part === true || part === false) {\n          continue;\n        }\n        part = String(part);\n        if (part !== '') {\n          parts.push(part);\n        }\n      }\n      return parts.join('/').replace(/([^:])(\\/\\/+)/g, '$1/').replace(/^\\/\\//, '/');\n    },\n\n    /**\n     * Encode URI component\n     */\n    encodeUriComponent: function(str, pctEncodeSpaces) {\n      return encodeURIComponent(str)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\n    },\n\n    /**\n     * Encode URI segments\n     */\n    encodeUriSegment: function(str) {\n      return this.encodeUriComponent(str, true).\n        replace(/%26/gi, '&').\n        replace(/%3D/gi, '=').\n        replace(/%2B/gi, '+');\n    }\n  };\n});\n\n})(window, window.angular);\n"],"sourceRoot":"/source/"}