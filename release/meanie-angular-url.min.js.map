{"version":3,"sources":["url.service.js","meanie-angular-url.min.js"],"names":["window","angular","undefined","module","factory","concat","parts","i","arguments","length","part","String","push","join","replace","encodeUriComponent","str","pctEncodeSpaces","encodeURIComponent","encodeUriSegment","this"],"mappings":"CAOA,SAAAA,EAAAC,EAAAC,GAAA,YAKAD,GAAAE,OAAA,kBAKAC,QAAA,OAAA,WACA,OAKAC,OAAA,WAEA,IAAA,GADAC,MACAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA,CACA,GAAAG,GAAAF,UAAAD,EACA,QAAAG,GAAAA,IAAAR,GAAAQ,KAAA,GAAAA,KAAA,IAGAA,EAAAC,OAAAD,GACA,KAAAA,GACAJ,EAAAM,KAAAF,IAGA,MAAAJ,GAAAO,KAAA,KAAAC,QAAA,iBAAA,OAAAA,QAAA,QAAA,MAMAC,mBAAA,SAAAC,EAAAC,GACA,MAAAC,oBAAAF,GACAF,QAAA,OAAA,KACAA,QAAA,QAAA,KACAA,QAAA,OAAA,KACAA,QAAA,QAAA,KACAA,QAAA,OAAAG,EAAA,MAAA,MAMAE,iBAAA,SAAAH,GACA,MAAAI,MAAAL,mBAAAC,GAAA,GACAF,QAAA,QAAA,KACAA,QAAA,QAAA,KCCQA,QAAQ,QAAS,UAKtBd,OAAQA,OAAOC","file":"meanie-angular-url.min.js","sourcesContent":["(function(window, angular, undefined) {'use strict';\n\n/**\n * Module definition and dependencies\n */\nangular.module('Url.Service', [])\n\n/**\n * Factory definition\n */\n.factory('$url', function() {\n  return {\n\n    /**\n     * Url concatenation helper\n     */\n    concat: function() {\n      var parts = [];\n      for (var i = 0; i < arguments.length; i++) {\n        var part = arguments[i];\n        if (part === null || part === undefined || part === true || part === false) {\n          continue;\n        }\n        part = String(part);\n        if (part !== '') {\n          parts.push(part);\n        }\n      }\n      return parts.join('/').replace(/([^:])(\\/\\/+)/g, '$1/').replace(/^\\/\\//, '/');\n    },\n\n    /**\n     * Encode URI component\n     */\n    encodeUriComponent: function(str, pctEncodeSpaces) {\n      return encodeURIComponent(str)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\n    },\n\n    /**\n     * Encode URI segments\n     */\n    encodeUriSegment: function(str) {\n      return this.encodeUriComponent(str, true).\n        replace(/%26/gi, '&').\n        replace(/%3D/gi, '=').\n        replace(/%2B/gi, '+');\n    }\n  };\n});\n\n})(window, window.angular);\n","/**\n * meanie-angular-url - v1.1.1 - 10-1-2016\n * https://github.com/meanie/angular-url\n *\n * Copyright (c) 2016 Adam Buczynski <me@adambuczynski.com>\n * License: MIT\n */\n(function(window, angular, undefined) {'use strict';\n\n/**\n * Module definition and dependencies\n */\nangular.module('Url.Service', [])\n\n/**\n * Factory definition\n */\n.factory('$url', function() {\n  return {\n\n    /**\n     * Url concatenation helper\n     */\n    concat: function() {\n      var parts = [];\n      for (var i = 0; i < arguments.length; i++) {\n        var part = arguments[i];\n        if (part === null || part === undefined || part === true || part === false) {\n          continue;\n        }\n        part = String(part);\n        if (part !== '') {\n          parts.push(part);\n        }\n      }\n      return parts.join('/').replace(/([^:])(\\/\\/+)/g, '$1/').replace(/^\\/\\//, '/');\n    },\n\n    /**\n     * Encode URI component\n     */\n    encodeUriComponent: function(str, pctEncodeSpaces) {\n      return encodeURIComponent(str)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\n    },\n\n    /**\n     * Encode URI segments\n     */\n    encodeUriSegment: function(str) {\n      return this.encodeUriComponent(str, true).\n        replace(/%26/gi, '&').\n        replace(/%3D/gi, '=').\n        replace(/%2B/gi, '+');\n    }\n  };\n});\n\n})(window, window.angular);\n"],"sourceRoot":"/source/"}